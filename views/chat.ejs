<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Socket.io 채팅</title>
    <script src="/socket.io/socket.io.js"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background-color: #f4f4f4;
      }

      h1 {
        text-align: center;
        color: #333;
      }

      .chat-box {
        position: relative;
        width: 80%;
        max-width: 400px;
        height: 80vh;
        border: 1px solid #ccc;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
      }

      .chat-list {
        flex: 1;
        padding: 10px;
        overflow-y: auto;
        max-height: 60vh;
      }

      .chat-input {
        position: absolute;
        bottom: 0;
        width: calc(100% - 20px);
        padding: 10px;
        background-color: #ecf0f1;
        display: flex;
      }

      #chat-message {
        flex: 1;
        margin-right: 10px;
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #ccc;
      }

      #submit-button {
        background-color: #3498db;
        color: #fff;
        border: none;
        padding: 8px;
        border-radius: 5px;
        cursor: pointer;
      }

      .my-chat,
      .other-chat {
        margin-bottom: 10px;
        padding: 8px;
        border-radius: 5px;
        display: flex;
        flex-direction: column;
      }

      .my-chat span {
        background-color: inherit; /* 배경색 삭제 */
        color: inherit; /* 텍스트 색상 삭제 */
      }

      .my-chat {
        text-align: right;
      }

      .other-chat {
        background-color: #ecf0f1;
        color: #333;
      }

      .entry-box {
        display: flex;
        margin-bottom: 10px;
      }

      .entry-box input {
        flex: 1;
        margin-right: 10px;
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #ccc;
      }

      .entry-box button {
        background-color: #3498db;
        color: #fff;
        border: none;
        padding: 8px;
        border-radius: 5px;
        cursor: pointer;
      }

      .notice {
        text-align: center;
        color: #888;
      }
    </style>
  </head>
  <body>
    <h1>My Chat</h1>

    <!-- 닉네임 입력 폼 -->
    <div class="entry-box">
      <input type="text" id="nickname" placeholder="닉네임" autofocus onkeypress="if(window.event.keyCode==13){join()}" />
      <button type="button" onclick="join();">입장</button>
    </div>

    <main class="chat-box">
      <div class="chat-list">
        <!-- <div class="my-chat">
                <div>작성자: user1</div>
                <div>내용: msg1</div>
            </div>
            <div class="other-chat">
                <div>작성자: user2</div>
                <div>내용: msg2</div>
            </div> -->
      </div>
      <div class="chat-input">
        <input type="text" id="chat-message" placeholder="채팅 입력..." />
        <button id="submit-button" onclick="submitChat()">제출</button>
      </div>
    </main>

    <script>
      let socket = io.connect(); // 소켓 사용을 위한 객체 생성

      socket.on('connect', () => {
        console.log('클라이언트.. 소켓 연결 완료. 소켓 객체 ID >> ', socket.id);

        socket.on('notice', (msg) => {
          document.querySelector('.chat-list').insertAdjacentHTML('beforeend', `<div class="notice">${msg}</div>`);
        });

        socket.on('nickDup', (msg) => {
          alert(msg);
        });

        socket.on('chatMessage', (data) => {
          const chatList = document.querySelector('.chat-list');
          const chatContent = `<div class="my-chat">
                                        <div>작성자: <span>${data.nick}</span></div>
                                        <div>내용: ${data.message}</div>
                                    </div>`;
          chatList.insertAdjacentHTML('beforeend', chatContent);
        });
      });

      function join() {
        socket.emit('setNick', document.querySelector('#nickname').value);
      }

      function submitChat() {
        const messageInput = document.getElementById('chat-message');
        const message = messageInput.value.trim();

        if (message !== '') {
          socket.emit('chatMessage', { message });
          messageInput.value = '';
        }
      }
    </script>
  </body>
</html>
